<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
    
    <!-- http://commons.apache.org/dbcp/configuration.html -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="5" />
		<property name="maxActive" value="50" />
		<property name="maxWait" value="1000" />
        <property name="removeAbandoned" value="${dbcp.removeAbandoned}" />
        <property name="removeAbandonedTimeout" value="${dbcp.removeAbandonedTimeout}" />
        <property name="logAbandoned" value="${dbcp.logAbandoned}" />
        <!-- <property name="removeAbandoned" value="true" />
        <property name="removeAbandonedTimeout" value="60" />
        <property name="logAbandoned" value="true" /> -->
        
        <property name="testOnBorrow" value="true"/>
		<property name="testOnReturn" value="true"/>
		<property name="testWhileIdle" value="true"/>
		<property name="timeBetweenEvictionRunsMillis" value="600000"/>
		<property name="validationQuery" value="select 1 from dual"/>
    </bean>

	<!-- enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>	

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:/kr/okplace/job/*/*Mapper.xml" /><!-- 
		<property name="configLocation" value="classpath:MapperConfig.xml" /> -->
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<!-- <constructor-arg index="1" value="BATCH" /> -->
		<qualifier value="BENEFITMETA" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.okplace.job" />
		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate" />
	</bean>
<!-- 	
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="ibatis-config.xml" />
	</bean>
 -->
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler">
		<property name="nativeJdbcExtractor">
			<!-- <bean class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor" /> -->
			<bean class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor" />
		</property>
	</bean>

	<bean id="myBatisBatchItemReader" abstract="true" class="org.mybatis.spring.batch.MyBatisPagingItemReader">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id="myBatisBatchItemWriter" abstract="true" class="org.mybatis.spring.batch.MyBatisBatchItemWriter">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id="commonMerchantLocationBenefitInserter" scope="step" parent="myBatisBatchItemWriter">
		<property name="statementId" value="kr.okplace.job.common.MerchantLocationBenefitMapper.insert" />
		<property name="assertUpdates" value="false" />
	</bean>

	<bean id="merchantLocationBenefitInterfaceInserter" scope="step" parent="myBatisBatchItemWriter">
		<property name="statementId" value="kr.okplace.job.common.MerchantLocationBenefitInterfaceMapper.insert" />
		<property name="assertUpdates" value="false" />
	</bean>

	<bean id="merchantLocationInterfaceInserter" scope="step" parent="myBatisBatchItemWriter">
		<property name="statementId" value="kr.okplace.job.common.MerchantLocationInterfaceMapper.insert" />
		<property name="assertUpdates" value="false" />
	</bean>

	<bean id="providerBenefitKeyMapInsertProcessor" class="kr.okplace.job.common.ProviderBenefitKeyMapInsertProcessor" />

    <bean id="deleterByBenefitKey" parent="myBatisBatchItemWriter">
		<property name="statementId" value="kr.okplace.job.common.MerchantLocationBenefitMapper.deleteByBenefitKey" />
    </bean>

    <bean id="deleterByBenefitInterface" parent="myBatisBatchItemWriter">
		<property name="statementId" value="kr.okplace.job.common.MerchantLocationBenefitInterfaceMapper.deleteByBenefitInterface" />
    </bean>
		
</beans>
